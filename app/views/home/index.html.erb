<% require 'set' %>

<header class="jumbotron" id="intro_section">
  <div class="container-fluid">
    <div class="row">
      <div class="col-md-3" id="profile_picture_box">
        <%= image_tag( "sage_berg_profile_picture.jpg",
                       :id => "profile_picture",
                       :alt => "Sage Berg profile picture",
                       :class => "img-responsive",
                       :class => "center-block" ) %>
      </div>
      <div class="col-md-9" id="about_me">
        <h1>Sage Berg<h1>
        <p>I like coding, running and self-tracking.</p>
      </div>
    </div> <!-- end row -->
  </div> <!-- end container -->
</header>

<div class="jumbotron" id="tech_tracking">

  <div class="section_header">
    <h2 class="section_title">Tools I use</h2>
    <p>I update this list daily to encourage myself to explore new technologies.
    </p>
  </div>

  <div class="container">
    <span class="text-nowrap">
    <table class="table">
      <thead>
        <tr>
          <th>Logo</th>
          <th>Tool</th>
          <th><%= "Days used in the last " +
                 ((Date.today - Date.new(2016,5,22)).to_i + 1).to_s + " days"%>
          </th>
          <th>Days used in the last <%=
             [Tech.box_days, Date.today - Date.new(2016,5,21)].min.ceil %> days
           </th>
        </tr>
      <thead>
      <tbody>


        <% @uses = Use.all %>
        <% @tech_ids_to_uses = {} %>

        <% @uses.each do |use| %>
          <% date_string = use.created_at.year.to_s + ", " +
                           use.created_at.month.to_s + ", " +
                           use.created_at.day.to_s %></p>
          <% if @tech_ids_to_uses[use.tech_id] == nil %>
            <% @tech_ids_to_uses[use.tech_id] = Set.new [date_string] %>
          <% else %>
            <% @tech_ids_to_uses[use.tech_id].add(date_string) %>
          <% end %>
        <% end %>

        <% @techs = Tech.all %>

        <% @techs.each do |tech| %>

          <!-- update tech.times_used based on number of associated uses -->
          <% if @tech_ids_to_uses[tech.id] != nil &&
                (tech.times_used == nil ||
                @tech_ids_to_uses[tech.id].size > tech.times_used) %>
            <% tech.times_used = @tech_ids_to_uses[tech.id].size %>
            <% tech.save %>
          <% end %>
        <% end %>

        <% @techs = Tech.all.order(:times_used).reverse_order %>

        <% @techs.each do |tech| %>
          <tr>
            <td>
              <%= image_tag( tech.image_ref,
                             :class => "tech_logo" ) %>
            </td>
            <td>
              <%= tech.name %>
            </td>
            <td>
              <% if @tech_ids_to_uses[tech.id] != nil %>
                <%= @tech_ids_to_uses[tech.id].size.to_s %>
              <% else %>
                <%= "0" %>
              <% end %>
            </td>
            <td>
              <div class="GitHub_style_boxes">
                <% box_count = [Tech.box_days,
                                Date.today - Date.new(2016,5,22)].min %>
                <% for i in 0..box_count %>

                  <% day = Date.today - i %>
                  <% day_string = day.year.to_s + ", " +
                                  day.month.to_s + ", " +
                                  day.day.to_s %>

                  <% if @tech_ids_to_uses[tech.id] != nil &&
                    @tech_ids_to_uses[tech.id].include?(day_string) %>
                    <!-- TODO only use dates within last Tech.box_days days -->
                    <div class="checked_GitHub_style_box"
                         title=" <%= Date.today - i %>"></div>
                  <% else %>
                    <div class="blank_GitHub_style_box"
                         title="<%= Date.today - i %>"></div>
                  <% end %> <!-- end unless -->
                <% end %> <!-- end loop -->
              </div> <!-- end GitHub style boxes -->
            </td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </span>
  </div> <!-- end container -->
</div> <!-- end jumbotron -->


<div class="jumbotron" id="colors_game">
  <div class="section_header">
    <h2 class="section_title">Color Identifier Game</h2>
  </div>
  <div class="container-fluid">
    <div class="row">
      <div class="col-md-3">
      </div>
      <div class="col-md-3">
        <h3 class="color_game_header" id="actual_color">Actual color: #??????</h3>
        <div class="container-fluid" id="colored_dot">
        </div>
      </div>
      <div class="col-md-3">
        <h3 class="color_game_header" id="your_guess">Your gusss</h3>
        <div class="container-fluid" id="guess_dot">
        </div>
      </div>
      <div class="col-md-3">
      </div>
    </div>
  </div>

  <div id="color_game_inputs">
    <div class="row">
      <div class="col-md-3">
      </div>
      <div class="col-md-2">
        <button type="button" class="btn btn-default color_game_button" onclick="guess_color()">Submit Color Guess</button>
      </div>
      <div class="col-md-2">
        <input id="guess_field" class="color_game_button" placeholder="Color Guess (e.g. 3d66e9)"></input>
      </div>
      <div class="col-md-2">
        <button type="button" class="btn btn-default color_game_button" onclick="start_color_game()">New Game</button>
      </div>
      <div class="col-md-3">
      </div>
    </div>
  </div>
</div>

<script>
  function componentToHex(c) {
    var hex = c.toString(16);
    return hex.length == 1 ? "0" + hex : hex;
  }

  function rgbToHex(r, g, b) {
    return "#" + componentToHex(r) + componentToHex(g) + componentToHex(b);
  }

  function random_color() {
    color_string = "#"
    for (var i = 0; i < 6; i++) {
      color_string += Math.floor(Math.random() * 16).toString(16);
    }
    return color_string;
  }

  function guess_color() {
    actual_color = document.getElementById("colored_dot").style.backgroundColor;
    guess = "#" + document.getElementById("guess_field").value;
    document.getElementById("guess_dot").style.backgroundColor = guess;
    rgb = actual_color.replace(/[^\d,]/g, '').split(',');
    r = parseInt(rgb[0])
    g = parseInt(rgb[1])
    b = parseInt(rgb[2])
    document.getElementById("actual_color").innerHTML = "Actual color: " + rgbToHex(r,g,b);
    document.getElementById("your_guess").innerHTML = "Your guess: " + guess;
    //start_color_game();
  }

  function start_color_game() {
    document.getElementById("guess_dot").style.backgroundColor = "#fff";
    document.getElementById("colored_dot").style.backgroundColor = random_color();
    document.getElementById("guess_field").value = "";
    document.getElementById("actual_color").innerHTML = "Actual color: #??????";
    document.getElementById("your_guess").innerHTML = "Your guess:";
  }

  start_color_game()
</script>
